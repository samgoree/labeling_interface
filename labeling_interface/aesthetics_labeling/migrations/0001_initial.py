# Generated by Django 3.2.4 on 2021-09-23 14:59

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('age', models.TextField()),
                ('gender', models.TextField()),
                ('ethnicity', models.IntegerField(choices=[(0, 'Choose not to specify'), (1, 'Yes'), (2, 'No')], default=0)),
                ('race', models.TextField()),
                ('education', models.IntegerField(choices=[(0, 'Choose not to specify'), (1, 'Less than a high school diploma'), (2, 'High school degree or equivalent (e.g. GED)'), (3, 'Some college, no degree'), (4, 'Associate degree (e.g. AA, AS)'), (5, 'Bachelor’s degree (e.g. BA, BS)'), (6, 'Master’s degree (e.g. MA, MS, MEd)'), (7, 'Professional degree (e.g. MD, DDS, DVM)'), (8, 'Doctorate (e.g. PhD, EdD)')], default=0)),
                ('language', models.TextField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_path', models.CharField(max_length=200)),
                ('broken', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ComparisonAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.IntegerField(choices=[(0, 'Unlabeled'), (1, 'I prefer A'), (2, 'I prefer B'), (3, 'Similarly Good'), (4, 'Similarly Bad'), (5, 'Too different')], default=0)),
                ('raw_similarity', models.FloatField()),
                ('label_similarity', models.FloatField()),
                ('assigned_participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('comparison', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aesthetics_labeling.comparison')),
            ],
        ),
        migrations.AddField(
            model_name='comparison',
            name='image_a',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comparison_as_a', to='aesthetics_labeling.image'),
        ),
        migrations.AddField(
            model_name='comparison',
            name='image_b',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comparison_as_b', to='aesthetics_labeling.image'),
        ),
    ]
